{"version":3,"sources":["6.class.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;IACM,M;AACF;AACD,oBAAY,IAAZ,EAAiB;AAAA;;AACZ,aAAK,IAAL,GAAY,IAAZ;AACJ;;;;kCACQ;AACJ,oBAAQ,GAAR,CAAY,KAAK,IAAjB;AACJ;;;;;;AAGJ;;;;;;;;;;;;AAUA,IAAI,KAAK,IAAI,MAAJ,CAAW,OAAX,CAAT;AACA,IAAI,KAAK,IAAI,MAAJ,CAAW,OAAX,CAAT;AACA,QAAQ,GAAR,CAAY,GAAG,OAAH,KAAe,GAAG,OAA9B;AACA,GAAG,OAAH;AACA,GAAG,OAAH","file":"6.class-compiled.js","sourcesContent":["//声明一个类\r\n//当一个类实例化的时候，会自动调用contrustor方法\r\n//其它的方法不会自动调用，是公有方法\r\nclass Person{\r\n    //构造函数 用来初始化私有属性\r\n   constructor(name){\r\n        this.name = name;\r\n   }\r\n   getName(){\r\n        console.log(this.name);\r\n   }\r\n}\r\n\r\n/*function Person(name){\r\n    //私有属性在构造函数内部初始化，属于每个实例私有\r\n    this.name = name;\r\n}\r\n//公有属性在原型上创建，所有的实例共享\r\n//在原型中的this指向的是实例本身\r\nPerson.prototype.getName = function(){\r\n    console.log(this.name);\r\n}\r\nPerson.prototype.name = 'zfpx';*/\r\nvar p1 = new Person('zfpx1');\r\nvar p2 = new Person('zfpx2');\r\nconsole.log(p1.getName === p2.getName);\r\np1.getName();\r\np2.getName();"]}