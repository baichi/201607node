{"version":3,"sources":["4.arrow.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAI,MAAM,SAAN,GAAM,CAAS,CAAT,EAAW,CAAX,EAAa;AACnB,YAAQ,GAAR,CAAY,IAAZ;AACA,WAAO,IAAE,CAAT;AACH,CAHD;;AAKA,IAAI,MAAM,SAAN,GAAM,CAAC,CAAD,EAAG,CAAH,EAAO;AACb,YAAQ,GAAR;AACA,WAAO,IAAE,CAAT;AACH,CAHD;AAIA,IAAI,SAAS;AACT,UAAK,MADI;AAET,aAAQ,mBAAU;AAAA;;AACd,gBAAQ,GAAR,CAAY,KAAK,IAAjB;AACA,mBAAW,YAAI;AACX,oBAAQ,GAAR;AACH,SAFD,EAEE,IAFF;AAGH;AAPQ,CAAb;AASA,OAAO,OAAP;;AAGA,SAAS,KAAT,GAAiB;AAAA;;AACb,SAAK,EAAL,GAAU,CAAV;AACA,SAAK,EAAL,GAAU,CAAV;AACA;AACA,gBAAY;AAAA,eAAM,OAAK,EAAL,EAAN;AAAA,KAAZ,EAA6B,IAA7B;AACA;AACA,gBAAY,YAAY;AACpB,aAAK,EAAL;AACH,KAFD,EAEG,IAFH;AAGH;;AAED,IAAI,QAAQ,IAAI,KAAJ,EAAZ;;AAEA,WAAW;AAAA,WAAM,QAAQ,GAAR,CAAY,MAAZ,EAAoB,MAAM,EAA1B,CAAN;AAAA,CAAX,EAAgD,IAAhD,E,CAAsD;AACtD,WAAW;AAAA,WAAM,QAAQ,GAAR,CAAY,MAAZ,EAAoB,MAAM,EAA1B,CAAN;AAAA,CAAX,EAAgD,IAAhD,E,CAAsD","file":"4.arrow-compiled.js","sourcesContent":["/*\r\n/!*function double(v){\r\n    return v*2;\r\n}*!/\r\n//只有一个参数或返回值的时候\r\nvar double = v=>v*2;\r\nconsole.log(double(124));\r\n//没有参数的时候需要加小括号表示零参数\r\nvar say = ()=>'hello';\r\nconsole.log(say());\r\n//如果参数多于一个的话，那么也需要小括号\r\nvar add = (a,b)=>a+b;\r\nconsole.log(add(2,3));\r\n//当函数体不保包括一个返回值的时候，外面要包一个大括号\r\nvar world = ()=>{\r\n    console.log('world');\r\n    return 'xxx';\r\n};\r\nconsole.log(world());\r\nconsole.log(getPerson);\r\nvar getPerson = (name,age) => {return {name,age}};\r\nvar person = getPerson('123',2);\r\nconsole.log(person)\r\n\r\n\r\nvar arr = [6,3,1,5,8];\r\narr.sort((a,b)=>a-b);\r\nconsole.log(arr); //输出 1 3 5 6 8\r\n\r\n\r\n*/\r\nvar sum = function(a,b){\r\n    console.log(this);\r\n    return a+b;\r\n};\r\n\r\nvar sum = (a,b)=>{\r\n    console.log(this);\r\n    return a+b;\r\n};\r\nvar person = {\r\n    name:'zfpx',\r\n    getName:function(){\r\n        console.log(this.name);\r\n        setTimeout(()=>{\r\n            console.log(this);\r\n        },1000);\r\n    }\r\n}\r\nperson.getName();\r\n\r\n\r\nfunction Timer() {\r\n    this.s1 = 0;\r\n    this.s2 = 0;\r\n    // 箭头函数\r\n    setInterval(() => this.s1++, 1000);\r\n    // 普通函数\r\n    setInterval(function () {\r\n        this.s2++;\r\n    }, 1000);\r\n}\r\n\r\nvar timer = new Timer();\r\n\r\nsetTimeout(() => console.log('s1: ', timer.s1), 3100);//输出多少\r\nsetTimeout(() => console.log('s2: ', timer.s2), 3100);//输出多少"]}